[pytest]
# Add src to Python path for imports
pythonpath = src

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*

# Output settings
addopts = 
    # Coverage settings
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    
    # HTML report
    --html=reports/pytest_report.html
    --self-contained-html
    
    # Performance and reliability
    --timeout=300
    --durations=10
    --tb=short
    
    # Parallel execution (for CI/CD)
    -n auto
    
    # Randomization for better test isolation
    --randomly-seed=42
    
    # Verbose output
    -v
    
    # Stop on first failure in CI
    --maxfail=1

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    benchmark: marks tests as performance/benchmark tests
    smoke: marks tests as smoke tests for CI
    regression: marks tests as regression tests

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov 